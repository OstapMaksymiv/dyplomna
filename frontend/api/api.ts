import { Transaction, User } from "@/types/types";

const BASE_URL = process.env.NEXT_PUBLIC_API_URL || "http://localhost:4000/api"; // –∑–∞–º—ñ–Ω–∏, —è–∫—â–æ —ñ–Ω—à–∞ –∞–¥—Ä–µ—Å–∞

// ‚úÖ –•–µ–ª–ø–µ—Ä –¥–ª—è fetch-–∑–∞–ø–∏—Ç—ñ–≤
async function request<T>(url: string, options: RequestInit = {}): Promise<T> {
  const res = await fetch(`${BASE_URL}${url}`, {
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...(options.headers || {}),
    },
    cache: "no-store", // –æ—Å–æ–±–ª–∏–≤–æ –¥–ª—è SSR —É Next.js
  });

  if (!res.ok) {
    const error = await res.json();
    console.log(error);
    
    throw new Error(error.message || "Request failed");
  }

  return res.json();
}

// üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è
export const authApi = {
  register: (email: string, password: string ) =>
    request("/auth/register", {
      method: "POST",
      body: JSON.stringify({ email, password })
    }),

  login: (email: string, password: string ) =>
    request<{ user: User | null; token: string; }>("/auth/login", {
      method: "POST",
      body: JSON.stringify({ email, password }),
    }),
};

// üí∏ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
export const transactionApi = {
  getAll: (token: string | null) =>
  request<Transaction[]>(`/transactions`, {
    headers: { Authorization: `Bearer ${token}` },
  }),

  create: (data: any, token: string) =>
    request("/transactions", {
      method: "POST",
      body: JSON.stringify(data),
      headers: { Authorization: `Bearer ${token}` },
    }),
};

// üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó
export const categoryApi = {
  getAll: (token: string) =>
    request("/categories", {
      headers: { Authorization: `Bearer ${token}` },
    }),

  create: (data: any, token: string) =>
    request("/categories", {
      method: "POST",
      body: JSON.stringify(data),
      headers: { Authorization: `Bearer ${token}` },
    }),
};

// üí∞ –ë—é–¥–∂–µ—Ç–∏
export const budgetApi = {
  getAll: (token: string) =>
    request("/budgets", {
      headers: { Authorization: `Bearer ${token}` },
    }),

  create: (data: any, token: string) =>
    request("/budgets", {
      method: "POST",
      body: JSON.stringify(data),
      headers: { Authorization: `Bearer ${token}` },
    }),
};
